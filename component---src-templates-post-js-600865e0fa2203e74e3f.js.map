{"version":3,"sources":["webpack:///./src/templates/post.js"],"names":["BlogPostTemplate","data","pageContext","post","markdownRemark","previous","next","title","frontmatter","description","excerpt","style","marginTop","rhythm","marginBottom","scale","display","dateModified","tags","map","tag","key","marginLeft","marginRight","to","kebabCase","dangerouslySetInnerHTML","__html","html","flexWrap","justifyContent","listStyle","padding","fields","slug","rel","pageQuery"],"mappings":"kQAsGeA,UA5FU,SAAC,GAA2B,IAAzBC,EAAwB,EAAxBA,KAAMC,EAAkB,EAAlBA,YAC1BC,EAAOF,EAAKG,eACVC,EAAmBH,EAAnBG,SAAUC,EAASJ,EAATI,KAElB,OACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CACEC,MAAOJ,EAAKK,YAAYD,MACxBE,YAAaN,EAAKK,YAAYC,aAAeN,EAAKO,UAEpD,iCACE,gCACE,wBACEC,MAAO,CACLC,UAAWC,YAAO,GAClBC,aAAc,IAGfX,EAAKK,YAAYD,OAEpB,yBACEI,MAAK,+BACAI,aAAM,KADN,IAEHC,QAAQ,WAHZ,kBAMkBb,EAAKK,YAAYS,cAEnC,yBACEN,MAAK,+BACAI,aAAM,KADN,IAEHC,QAAQ,QACRF,aAAcD,YAAO,MAJzB,QAQ2B,OAA1BV,EAAKK,YAAYU,MAAiBf,EAAKK,YAAYU,KAAKC,KAAI,SAAAC,GAC3D,OACE,0BACEC,IAAKD,EACLT,MAAO,CACLW,WAAYT,YAAO,IACnBU,YAAaV,YAAO,MAGtB,kBAAC,OAAD,CAAMW,GAAE,SAAWC,IAAUL,IAASA,SAM9C,6BAASM,wBAAyB,CAAEC,OAAQxB,EAAKyB,QACjD,wBACEjB,MAAO,CACLG,aAAcD,YAAO,MAGzB,gCACE,kBAAC,IAAD,QAIJ,6BACE,wBACEF,MAAO,CACLK,QAAQ,OACRa,SAAS,OACTC,eAAe,gBACfC,UAAU,OACVC,QAAS,IAGX,4BACG3B,GACC,kBAAC,OAAD,CAAMmB,GAAInB,EAAS4B,OAAOC,KAAMC,IAAI,QAApC,KACK9B,EAASG,YAAYD,QAI9B,4BACGD,GACC,kBAAC,OAAD,CAAMkB,GAAIlB,EAAK2B,OAAOC,KAAMC,IAAI,QAC7B7B,EAAKE,YAAYD,MADpB,WAaP,IAAM6B,EAAS","file":"component---src-templates-post-js-600865e0fa2203e74e3f.js","sourcesContent":["import React from \"react\"\nimport { Link, graphql } from \"gatsby\"\nimport kebabCase from \"lodash/kebabCase\"\n\nimport Bio from \"../components/bio\"\nimport Layout from \"../components/layout\"\nimport SEO from \"../components/seo\"\nimport { rhythm, scale } from \"../utils/typography\"\n\n\nconst BlogPostTemplate = ({ data, pageContext }) => {\n  const post = data.markdownRemark\n  const { previous, next } = pageContext\n\n  return (\n    <Layout>\n      <SEO\n        title={post.frontmatter.title}\n        description={post.frontmatter.description || post.excerpt}\n      />\n      <article>\n        <header>\n          <h2\n            style={{\n              marginTop: rhythm(1),\n              marginBottom: 0,\n            }}\n          >\n            {post.frontmatter.title}\n          </h2>\n          <div\n            style={{\n              ...scale(-1 / 5),\n              display: `block`,\n            }}\n          >\n            Last modified: {post.frontmatter.dateModified}\n          </div>\n          <div\n            style={{\n              ...scale(-1 / 5),\n              display: `block`,\n              marginBottom: rhythm(1),\n            }}\n          >Tags:\n          \n          {post.frontmatter.tags === null || post.frontmatter.tags.map(tag => {\n            return (\n              <span\n                key={tag}\n                style={{\n                  marginLeft: rhythm(0.2),\n                  marginRight: rhythm(0.2),\n                }}\n              >\n                <Link to={`/tags/${kebabCase(tag)}`}>{tag}</Link>\n              </span>\n            )\n          })}\n          </div>\n        </header>\n        <section dangerouslySetInnerHTML={{ __html: post.html }} />\n        <hr\n          style={{\n            marginBottom: rhythm(1),\n          }}\n        />\n        <footer>\n          <Bio />\n        </footer>\n      </article>\n\n      <nav>\n        <ul\n          style={{\n            display: `flex`,\n            flexWrap: `wrap`,\n            justifyContent: `space-between`,\n            listStyle: `none`,\n            padding: 0,\n          }}\n        >\n          <li>\n            {previous && (\n              <Link to={previous.fields.slug} rel=\"prev\">\n                ← {previous.frontmatter.title}\n              </Link>\n            )}\n          </li>\n          <li>\n            {next && (\n              <Link to={next.fields.slug} rel=\"next\">\n                {next.frontmatter.title} →\n              </Link>\n            )}\n          </li>\n        </ul>\n      </nav>\n    </Layout>\n  )\n}\n\nexport default BlogPostTemplate\n\nexport const pageQuery = graphql`\n  query BlogPostBySlug($slug: String!) {\n    site {\n      siteMetadata {\n        title\n        author {\n          name\n          summary\n        }\n        license\n        licenseURL\n      }\n    }\n    markdownRemark(fields: { slug: { eq: $slug } }) {\n      id\n      excerpt(pruneLength: 160)\n      html\n      frontmatter {\n        title\n        dateCreated(formatString: \"MMMM DD, YYYY\")\n        dateModified(formatString: \"MMMM DD, YYYY\")\n        tags\n        description\n      }\n    }\n  }\n`\n"],"sourceRoot":""}