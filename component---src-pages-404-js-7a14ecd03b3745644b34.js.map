{"version":3,"sources":["webpack:///./src/components/seo.js","webpack:///./src/pages/404.js"],"names":["SEO","description","lang","meta","imagepath","title","site","useStaticQuery","metaDescription","siteMetadata","htmlAttributes","titleTemplate","name","content","property","social","twitter","concat","defaultProps","NotFoundPage","data","pageQuery"],"mappings":"2FAAA,iDAYMA,EAAM,SAAC,GAAmD,IAAjDC,EAAgD,EAAhDA,YAAaC,EAAmC,EAAnCA,KAAMC,EAA6B,EAA7BA,KAAMC,EAAuB,EAAvBA,UAAWC,EAAY,EAAZA,MACzCC,EAASC,yBAAe,cAAxBD,KAgBFE,EAAkBP,GAAeK,EAAKG,aAAaR,YAEzD,OACE,kBAAC,SAAD,CACES,eAAgB,CACdR,QAEFG,MAAOA,EACPM,cAAa,QAAUL,EAAKG,aAAaJ,MACzCF,KAAM,CACJ,CACES,KAAK,cACLC,QAASL,GAEX,CACEM,SAAS,WACTD,QAASR,GAEX,CACES,SAAS,WACTD,QAAST,GAEX,CACEU,SAAS,iBACTD,QAASL,GAEX,CACEM,SAAS,UACTD,QAAQ,WAEV,CACED,KAAK,eACLC,QAAQ,WAEV,CACED,KAAK,kBACLC,QAASP,EAAKG,aAAaM,OAAOC,SAEpC,CACEJ,KAAK,gBACLC,QAASR,GAEX,CACEO,KAAK,gBACLC,QAAST,GAEX,CACEQ,KAAK,sBACLC,QAASL,IAEXS,OAAOd,MAKfH,EAAIkB,aAAe,CACjBhB,KAAK,KACLC,KAAM,GACNF,YAAY,IAUCD,O,kCCjGf,kGAiBemB,UAVM,SAAC,GAAa,EAAXC,KACtB,OACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAKf,MAAM,mBACX,yCACA,wFAOC,IAAMgB,EAAS","file":"component---src-pages-404-js-7a14ecd03b3745644b34.js","sourcesContent":["/**\n * SEO component that queries for data with\n *  Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nimport React from \"react\"\nimport PropTypes from \"prop-types\"\nimport { Helmet } from \"react-helmet-async\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nconst SEO = ({ description, lang, meta, imagepath, title }) => {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            social {\n              twitter\n            }\n          }\n        }\n      }\n    `\n  )\n\n  const metaDescription = description || site.siteMetadata.description\n\n  return (\n    <Helmet\n      htmlAttributes={{\n        lang,\n      }}\n      title={title}\n      titleTemplate={`%s | ${site.siteMetadata.title}`}\n      meta={[\n        {\n          name: `description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:title`,\n          content: title,\n        },\n        {\n          property: `og:image`,\n          content: imagepath,\n        },\n        {\n          property: `og:description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:type`,\n          content: `website`,\n        },\n        {\n          name: `twitter:card`,\n          content: `summary`,\n        },\n        {\n          name: `twitter:creator`,\n          content: site.siteMetadata.social.twitter,\n        },\n        {\n          name: `twitter:title`,\n          content: title,\n        },\n        {\n          name: `twitter:image`,\n          content: imagepath,\n        },\n        {\n          name: `twitter:description`,\n          content: metaDescription,\n        },\n      ].concat(meta)}\n    />\n  )\n}\n\nSEO.defaultProps = {\n  lang: `en`,\n  meta: [],\n  description: ``,\n}\n\nSEO.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.arrayOf(PropTypes.object),\n  title: PropTypes.string.isRequired,\n}\n\nexport default SEO\n","import React from \"react\"\nimport { graphql } from \"gatsby\"\n\nimport Layout from \"../components/layout\"\nimport SEO from \"../components/seo\"\n\n\nconst NotFoundPage = ({ data }) => {\n  return (\n    <Layout>\n      <SEO title=\"404: Not Found\" />\n      <h1>Not Found</h1>\n      <p>You just hit a route that doesn&#39;t exist... the sadness.</p>\n    </Layout>\n  )\n}\n\nexport default NotFoundPage\n\nexport const pageQuery = graphql`\n  query {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n  }\n`\n"],"sourceRoot":""}