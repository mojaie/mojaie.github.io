{"componentChunkName":"component---src-templates-post-js","path":"/julia-pointer/","result":{"data":{"site":{"siteMetadata":{"title":"mojaie.github.io","siteUrl":"https://mojaie.github.io","author":{"name":"Seiji Matsuoka","summary":"Cheminformatics, Biointeraction and Laboratory automation"},"license":"CC BY 4.0","licenseURL":"https://creativecommons.org/licenses/by/4.0/legalcode","social":{"twitter":"mojaie"}}},"markdownRemark":{"id":"d7a1fca4-f94d-5782-ab66-f35f3207b123","excerpt":"Ref{T}とPtr{T} RefもPtrもメモリアドレスを指し示す値を格納するオブジェクトの型 それぞれC++における参照とポインタの概念に近い? Ref Refによる参照はで作成 参照先のオブジェクトの取得(デリファレンス)は Refは必ずJuliaのオブジェクトが格納された有効なアドレスを示すので、Ptr…","html":"<h3>Ref{T}とPtr{T}</h3>\n<ul>\n<li>RefもPtrもメモリアドレスを指し示す値を格納するオブジェクトの型</li>\n<li>それぞれC++における参照とポインタの概念に近い?</li>\n<li>\n<p>Ref</p>\n<ul>\n<li>Refによる参照は<code class=\"language-text\">Ref(x)</code>で作成</li>\n<li>参照先のオブジェクトの取得(デリファレンス)は<code class=\"language-text\">[]</code></li>\n<li>Refは必ずJuliaのオブジェクトが格納された有効なアドレスを示すので、Ptrより安全</li>\n<li>単に参照を使いたい場合はRefの方がいい</li>\n</ul>\n</li>\n<li>\n<p>Ptr</p>\n<ul>\n<li>Ptrを使うのは特にCやC++のライブラリAPIがポインタ渡しを要求する場合</li>\n<li><code class=\"language-text\">pointer(x)</code>で作成</li>\n<li>Refと異なりアドレスがNULLを指すことがあるので安全ではない</li>\n<li>デリファレンスの関数は<code class=\"language-text\">unsafe_load</code>、<code class=\"language-text\">unsafe_string</code>など、unsafeが付く</li>\n</ul>\n</li>\n<li>PtrはRefのサブタイプ(<code class=\"language-text\">Ptr &lt;: Ref</code>はtrue)</li>\n</ul>","fields":{"slug":"/julia-pointer/"},"frontmatter":{"title":"Juliaの参照とポインタのメモ","dateCreated":"June 23, 2020","dateModified":"June 23, 2020","tags":["Julialang","C","C++"],"description":null}}},"pageContext":{"slug":"/julia-pointer/","draft":false,"previous":{"fields":{"slug":"/argo-workflow-memo/"},"frontmatter":{"title":"Argoの環境構築(MacOS)","draft":false}},"next":{"fields":{"slug":"/inchi-memo/"},"frontmatter":{"title":"InChI実装メモ","draft":false}}}}}