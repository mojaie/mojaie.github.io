{"componentChunkName":"component---src-templates-post-js","path":"/inchi-memo/","result":{"data":{"site":{"siteMetadata":{"title":"mojaie.github.io","siteUrl":"https://mojaie.github.io","author":{"name":"Seiji Matsuoka","summary":"Cheminformatics, Biointeraction and Laboratory automation"},"license":"CC BY 4.0","licenseURL":"https://creativecommons.org/licenses/by/4.0/legalcode","social":{"twitter":"mojaie"}}},"markdownRemark":{"id":"0a106bbd-941b-58ae-925e-dfd405daa524","excerpt":"InChIについて IUPACとNISTが開発し、InChI Trustが開発継続中 InChI Trust https://www.inchi-trust.org InChIは化学構造式から一意に決まる文字列 同じ構造式からは必ず同じInChIが生成される 異なる構造式から同じInChI…","html":"<h3>InChIについて</h3>\n<ul>\n<li>IUPACとNISTが開発し、InChI Trustが開発継続中</li>\n<li>InChI Trust <a href=\"https://www.inchi-trust.org\">https://www.inchi-trust.org</a></li>\n<li>\n<p>InChIは化学構造式から一意に決まる文字列</p>\n<ul>\n<li>同じ構造式からは必ず同じInChIが生成される</li>\n<li>異なる構造式から同じInChIが生成されることはない</li>\n</ul>\n</li>\n<li>文字列比較で化学構造の完全一致が検出できる -> DBのインデックスとして使える</li>\n<li>可変長文字列なので取り扱いにくい</li>\n<li>\n<p>実用上は固定長のハッシュであるInChI keyが利用される</p>\n<ul>\n<li>ハッシュの衝突は実用上問題にならないくらい低頻度(PubChem数百万化合物程度では衝突しない)</li>\n<li>分子のサイズが大きくなるほど衝突の確率は上がる</li>\n</ul>\n</li>\n<li>\n<p>同じ構造式でもデータ形式が異なるとInChIは一致しないことがある</p>\n<ul>\n<li>データベースの統合時にはInChIの生成方法も統一することが重要</li>\n</ul>\n</li>\n<li>InChIの文字列は組成式、グラフ記述、水素数、…のように構造式の構成要素(レイヤーと言う)を並べたもの</li>\n<li>\n<p>分子グラフの文字列変換方法</p>\n<ul>\n<li>Canonical SMILESと同様にMorgan法に近い手順でノード番号を振る</li>\n<li>計算量オーダーはグラフ同型性問題に準ずる(多項式時間ではおそらくない)</li>\n<li>とはいえ、低分子化合物で速度が問題になることはない</li>\n</ul>\n</li>\n<li>\n<p>InChIおよびInChI keyから構造の部分一致を知ることはできない</p>\n<ul>\n<li>ただし、異性体レイヤーだけが異なるInChIから異性体の関係を知ることはできる</li>\n</ul>\n</li>\n</ul>\n<h3>実装</h3>\n<p>Downloads of InChI Software<br>\n<a href=\"https://www.inchi-trust.org/downloads/\">https://www.inchi-trust.org/downloads/</a></p>\n<ul>\n<li>InChI trustの公式サイトでバイナリをダウンロード、もしくはソースをビルド</li>\n<li>ライセンスは独自ライセンスだが、LGPLよりは緩いとのこと</li>\n</ul>\n<p>元のコードはプラットフォームごとにコンパイルのパラメータが異なりややこしい(しかもMacOSは対応していない)ので、CMakeFileを書いて下記リポジトリで公開しています。元のソフトウェアにはWindows用にInChI生成とノードインデックスの確認などができるGUIが搭載されていますが、こちらはAPIのライブラリファイルのみです。</p>\n<p>libinchi (InChI version 1.05 fork for cross-platform build of InChI API)\n<a href=\"https://github.com/mojaie/libinchi\">https://github.com/mojaie/libinchi</a></p>\n<p>このリポジトリを元に作成したJulia用のバイナリ(libinchi_jll.jl)をJuliaBinaryWrappersに登録しています。Julia REPLのPkgモードから<code class=\"language-text\">add libinchi_jll</code>でインストールできます。</p>\n<p>libinchi_jllはMolecularGraph.jlからも利用可能です。</p>\n<p>MolecularGraph.jl<br>\n<a href=\"https://github.com/mojaie/MolecularGraph.jl\">https://github.com/mojaie/MolecularGraph.jl</a></p>\n<h3>参考情報</h3>\n<ul>\n<li>Technical FAQ\n<a href=\"https://www.inchi-trust.org/technical-faq-2/\">https://www.inchi-trust.org/technical-faq-2/</a></li>\n<li>Compiling InChI to WebAssembly Part 1: Hello InChI<br>\n<a href=\"https://depth-first.com/articles/2019/05/15/compiling-inchi-to-webassembly-part-1/\">https://depth-first.com/articles/2019/05/15/compiling-inchi-to-webassembly-part-1/</a></li>\n</ul>","fields":{"slug":"/inchi-memo/"},"frontmatter":{"title":"InChI実装メモ","dateCreated":"June 25, 2020","dateModified":"June 25, 2020","tags":["chemoinformatics","molecular graph","molecular descriptor","C","Julia"],"description":null}},"file":null},"pageContext":{"slug":"/inchi-memo/","draft":false,"image":null,"previous":{"fields":{"slug":"/growi-memo/"},"frontmatter":{"title":"GROWI導入メモ","image":null,"draft":false}},"next":{"fields":{"slug":"/genie-rest-api/"},"frontmatter":{"title":"GenieとPostgreSQLでREST APIサーバを構築","image":null,"draft":false}}}},"staticQueryHashes":["2841359383","3266777773","401191528"]}