{"componentChunkName":"component---src-templates-post-js","path":"/environment-memo/","result":{"data":{"site":{"siteMetadata":{"title":"mojaie.github.io","siteUrl":"https://mojaie.github.io","author":{"name":"Seiji Matsuoka","summary":"Cheminformatics, Biointeraction and Laboratory automation"},"license":"CC BY 4.0","licenseURL":"https://creativecommons.org/licenses/by/4.0/legalcode","social":{"twitter":"mojaie"}}},"markdownRemark":{"id":"4f8bcd84-0be1-5e99-b469-89e3caa24462","excerpt":"公式サイトからダウンロード Sophos Tutanota Zoom Google Chrome Google Drive (自宅のみ) Dropbox Atom Sourcetree Mendeley Desktop InkScape Docker Knime Tabula Julia最新版 App store…","html":"<h3>公式サイトからダウンロード</h3>\n<ul>\n<li>Sophos</li>\n<li>Tutanota</li>\n<li>Zoom</li>\n<li>Google Chrome</li>\n<li>Google Drive (自宅のみ)</li>\n<li>Dropbox</li>\n<li>Atom</li>\n<li>Sourcetree</li>\n<li>Mendeley Desktop</li>\n<li>InkScape</li>\n<li>Docker</li>\n<li>Knime</li>\n<li>Tabula</li>\n<li>Julia最新版</li>\n</ul>\n<h3>App storeからダウンロード</h3>\n<ul>\n<li>Taurine</li>\n<li>StuffIt Expander</li>\n</ul>\n<h3>Homebrew</h3>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">mkdir .homebrew &amp;&amp; curl -L https://github.com/Homebrew/brew/tarball/master | tar xz --strip 1 -C .homebrew\nbrew update\nbrew doctor</code></pre></div>\n<p>brew doctorでxcodeがなければインストールするか聞かれるので入れる。XQuartzはcaskで入れる。</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">brew cask install xquartz</code></pre></div>\n<h3>Python</h3>\n<p>pyenvとPoetryを使う(Poetry単独だと2.7系のシステムPythonを使おうとする)</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\"># pyenv\nbrew install pyenv\npyenv install --list\npyenv install [listで確認したバージョン]\npyenv global [listで確認したバージョン]\n\n# .zshrcでパスを通す\necho -e &#39;if command -v pyenv 1&gt;/dev/null 2&gt;&amp;1; then\\n  eval &quot;$(pyenv init -)&quot;\\nfi&#39; &gt;&gt; ~/.zshrc\n\n# globalで使うパッケージ\npip install flake8\n\n# poetry\ncurl -sSL https://raw.githubusercontent.com/python-poetry/poetry/master/get-poetry.py | python\n# poetryにパスを通す\n# node風にローカルでパッケージを管理\npoetry config virtualenvs.in-project true</code></pre></div>\n<h4>JupyterのExtension</h4>\n<p>NbextensionとJupyTextをいれる</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">poetry add jupytext\npoetry add jupyter_contrib_nbextensions\npoetry run jupyter contrib nbextension install --user</code></pre></div>\n<h3>Julia</h3>\n<p>.zshrcでパスを通す。</p>\n<p>デフォルト環境にIJuliaをインストール</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">add IJulia</code></pre></div>\n<p>Jupyterのカーネルが登録されているか確認</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">jupyter kernelspec list</code></pre></div>\n<h3>Node.js</h3>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">brew install node\nnpm install -g yarn\nyarn global add eslint</code></pre></div>\n<h3>C/C++</h3>\n<p>cmakeはmacにデフォルトでインストールされていない。C++ビルドに必須(icu4cも?)。</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">brew install cmake\nbrew install icu4c</code></pre></div>\n<p>以下、condaからのマイグレーションTODO</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">conda install flake8\nconda install jupyter\nconda install jupyter_contrib_nbextensions -c conda-forge\nconda install rdkit -c rdkit  # vegaが先だとコンフリクトする？\nconda install vega -c conda-forge\nconda install scikit-learn\nconda install ghostscript  # MacTeX必須\n\n# chorus依存\nconda install networkx\nconda install matplotlib\nconda install cython\nconda install numexpr\nconda install pyyaml\n\n# flashflood依存\nconda install xlsxwriter\n\n# Node.js\nconda install nodejs -c conda-forge  # forgeの方が新しい\nnpm install eslint -g\n\n# 開発依存\nconda install sphinx\n# sphinxcontrib-napoleonはビルトインになった\nconda install sphinx_rtd_theme\nconda install twine -c conda-forge\nconda install wheel -c conda-forge\n\n# devをデプロイする場合\npip install git+https://github.com/mojaie/chorus.git@dev\npip install git+https://github.com/mojaie/flashflood.git@dev\npip install git+https://github.com/mojaie/flashflood-workflow.git@dev\n# kiwiii\nnpm install mojaie/kiwiii#dev\n\n# pandasはrdkit等で入る\n# tornado, pandocその他いろいろはjupyterで入る\n\nconda install  julia -c conda-forge\n# condaはアップデートが遅いのでdmgをインストールしてpath通した方がいいかも</code></pre></div>\n<p>その他マイグレーションTODO</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\"># Networkx2対応python-louvain\npip install git+https://github.com/taynaud/python-louvain.git@networkx2\n\nconda upgrade -n root conda\nconda install -n root conda-build\n\n# conda skeleton pypi sphinxcontrib-httpdomain\n# conda build sphinxcontrib-httpdomain\n# conda install --use-local sphinxcontrib-httpdomain\n\n# 後片付け\nconda build purge\nconda clean --all\n\n# サーバ用デーモン\npip install supervisor  # Python3未対応\necho_supervisord_conf &gt; $HOMEBREW/etc/supervisord.conf</code></pre></div>\n<h4>Supervisorメモ</h4>\n<ul>\n<li>supervisord.confの中身を編集</li>\n<li>supervisordで起動</li>\n<li>停止はソケットごと削除</li>\n<li>supervisorctl statusでステータス確認</li>\n<li>supervisorctl start <daemon></li>\n<li>supervisorctl stop <daemon></li>\n<li>supervisorctl restart <daemon></li>\n</ul>\n<h3>Atomの設定</h3>\n<h4>設定ファイルの共有</h4>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">cd .atom\nln -s ~/Dropbox/workspace/atom_settings/config.cson\nln -s ~/Dropbox/workspace/atom_settings/styles.less\nln -s ~/Dropbox/workspace/atom_settings/init.coffee</code></pre></div>\n<h4>パッケージ</h4>\n<ul>\n<li>langage-julia</li>\n<li>langage-latex</li>\n<li>langage-restructuredtext</li>\n<li>latex</li>\n<li>linter</li>\n<li>linter-eslint</li>\n<li>linter-flake8</li>\n<li>linter-htmlhint</li>\n<li>show-ideographic-space</li>\n<li>split-diff</li>\n<li>rst-preview-pandoc</li>\n</ul>\n<h4>テーマ</h4>\n<ul>\n<li>seti-ui アイコンが良い</li>\n<li>predawn-syntax 見やすい</li>\n</ul>\n<h3>LaTeX</h3>\n<ul>\n<li>MacTeX公式からBasicTeX.pkgをダウンロードしてインストール</li>\n<li>/Library/TeX/texbinにパスを通す</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">sudo tlmgr update --self --all  # なんかエラー出る\nsudo tlmgr install latexmk    # pdf出力 デフォルトで入ってない\nsudo tlmgr install achemso    # ACSのフォーマット\nsudo tlmgr install mhchem     # achemso必須\nsudo tlmgr install chemgreek  # achemso必須\nsudo tlmgr install mciteplus  # achemso必須</code></pre></div>\n<h3>PyMol</h3>\n<ul>\n<li>TODO: ラボォの人のテキストを参考に構築</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">brew install homebrew/dupes/tcl-tk --enable-threads --with-x11  # for PyMol\nbrew install python --with-brewed-tk  # for PyMol\nbrew install homebrew/science/pymol</code></pre></div>\n<h3>その他</h3>\n<ul>\n<li>TODO: gromacsとかpsi4のdocker</li>\n</ul>","fields":{"slug":"/environment-memo/"},"frontmatter":{"title":"作業環境構築メモ","dateCreated":"May 19, 2020","dateModified":"May 26, 2020","tags":["Mac OS X","environment setup"],"description":null}}},"pageContext":{"slug":"/environment-memo/","draft":true,"previous":{"fields":{"slug":"/argo-workflow-memo/"},"frontmatter":{"title":"Argoの環境構築","draft":false}},"next":{"fields":{"slug":"/julia-package-binary/"},"frontmatter":{"title":"C/C++のライブラリをJuliaのパッケージとして登録する(Julia 1.3以降)","draft":false}}}}}